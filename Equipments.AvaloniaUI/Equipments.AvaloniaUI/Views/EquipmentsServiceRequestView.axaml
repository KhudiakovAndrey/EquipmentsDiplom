<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Equipments.AvaloniaUI.ViewModels"
			 xmlns:views="clr-namespace:Equipments.AvaloniaUI.Views"
			 xmlns:model="clr-namespace:Equipments.AvaloniaUI.Models"
			 xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:beh="clr-namespace:Equipments.AvaloniaUI.Behaviors"
			 xmlns:aspose="clr-namespace:Aspose.Cells;assembly=Aspose.Cells"
			 mc:Ignorable="d" d:DesignWidth="750" d:DesignHeight="450"
			 x:DataType="vm:EquipmentsServiceRequestViewModel"
			 x:Class="Equipments.AvaloniaUI.Views.EquipmentsServiceRequestView">
	<UserControl.Styles>
		<StyleInclude Source="/Styles/SpecialViewStyles/EquipmentsServiceRequestStyles.axaml"/>
	</UserControl.Styles>


	<DockPanel Classes="main_container">

		<!--DOCK TOP-->
		<Grid DockPanel.Dock="Top"
			  Classes="header"
			  ColumnDefinitions="Auto,10,Auto,*,Auto">
			<TextBlock VerticalAlignment="Center" Classes="h4">Заявки на обслуживание оборудования</TextBlock>
			<SplitButton Grid.Column="2" ToolTip.Tip="Экспорт в Excel"
						 Command="{Binding ExportPage}"
						 CommandParameter="{x:Static aspose:SaveFormat.Xlsx}}">
				<materialIcons:MaterialIcon Kind="MicrosoftExcel"/>
				<SplitButton.Flyout>
					<MenuFlyout Placement="BottomEdgeAlignedRight">
						<MenuItem Icon="{materialIcons:MaterialIconExt Kind=FilePdfBox}"
								  Header="Экспорт в PDF"
								  Command="{Binding ExportPage}"
								  CommandParameter="{x:Static aspose:SaveFormat.Pdf}}"/>
						<MenuItem Icon="{materialIcons:MaterialIconExt Kind=LanguageHtml5}"
								  Header="Экспорт в Html"
								  Command="{Binding ExportPage}"
								  CommandParameter="{x:Static aspose:SaveFormat.Html}}"/>
						<MenuItem Icon="{materialIcons:MaterialIconExt Kind=FileDocument}"
								  Header="Экспорт в CSV"
								  Command="{Binding ExportPage}"
								  CommandParameter="{x:Static aspose:SaveFormat.Csv}}"/>
					</MenuFlyout>
				</SplitButton.Flyout>
			</SplitButton>

			<StackPanel Orientation="Horizontal"
						Grid.Column="4"
						Spacing="5">
				<TextBlock>На странице:</TextBlock>
				<ComboBox ItemsSource="{Binding PageSizes}"
						  SelectedItem="{Binding Page.PageSize}"
						  SelectedIndex="0"
						  Classes="nonBackground">
				</ComboBox>


				<TextBlock VerticalAlignment="Center">
					Всего
					<TextBlock Text="{Binding Page.CountFound}"/>
				</TextBlock>

				<Button ToolTip.Tip="Предыдущая страница"
						Command="{Binding BackPageCommand}">
					<materialIcons:MaterialIcon Kind="ArrowLeftBold"/>
				</Button>

				<!--Доработать-->
				<Button IsEnabled="False" Width="32">
					<TextBlock Text="{Binding Page.PageNumber, FallbackValue=1}"/>
				</Button>
				<!--Доработать-->

				<Button ToolTip.Tip="Следующая страница"
						Command="{Binding NextPageCommand}">
					<materialIcons:MaterialIcon Kind="ArrowRightBold"/>
				</Button>
				<TextBlock>
					из <TextBlock Text="{Binding Page.TotalCount}"/>
				</TextBlock>
			</StackPanel>
		</Grid>

		<!--DOCK CONTENT-->
		<Border Classes="content_container">
			<DockPanel>

				<Grid DockPanel.Dock="Top"
					  Classes="tools_container"
					  ColumnDefinitions="Auto,10,Auto,*,Auto">
					<ListBox ItemsSource="{Binding ChangeHeightDataGridRowItems}"
							 SelectedItem="{Binding SelectedHeightDataGridRow}"
							 SelectedIndex="0"
							 SelectionMode="Single"
							 Classes="height_rows">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<PathIcon Data="{Binding Icon}"/>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

					<Button IsVisible="False" Grid.Column="3" Command="{Binding ShowTest}">Загрузка файла</Button>

					<StackPanel Spacing="10" Orientation="Horizontal" Grid.Column="2">
						<AutoCompleteBox Watermark="Найти заявителя" MinWidth="200"
										 Classes="clearButton"
										 ItemsSource="{Binding Responsibles}"
										 ValueMemberBinding="{Binding (model:EmployeModel).FullName}"
										 FilterMode="ContainsOrdinal"
										 SelectedItem="{Binding SelectedResponsible}">
							<AutoCompleteBox.ItemTemplate>
								<DataTemplate DataType="model:EmployeModel">
									<Grid RowDefinitions="Auto, Auto" ColumnDefinitions="Auto,5,*">
										<TextBlock Grid.Column="2" Text="{Binding FullName}"/>
										<TextBlock Grid.Row="1" Grid.Column="2" FontWeight="ExtraLight">
											<TextBlock Text="{Binding Post}"/>
											<TextBlock Text="{Binding Department}"/>
										</TextBlock>
										<Border Background="Transparent"
												Grid.RowSpan="2"
												ClipToBounds="True"
												CornerRadius="10"
												Width="40" Height="40">
											<Image Source="{Binding ImageUrl^}	"
										   />
										</Border>
									</Grid>
								</DataTemplate>
							</AutoCompleteBox.ItemTemplate>
						</AutoCompleteBox>

						<AutoCompleteBox Watermark="Найти исполнителя" MinWidth="200"
										 Classes="clearButton"
										 ItemsSource="{Binding SystemAdministrations}"
										 ValueMemberBinding="{Binding (model:EmployeModel).FullName}"
										 FilterMode="ContainsOrdinal"
										 SelectedItem="{Binding SelectedSystemAdministrator}">
							<AutoCompleteBox.ItemTemplate>
								<DataTemplate DataType="model:EmployeModel">
									<Grid RowDefinitions="Auto, Auto" ColumnDefinitions="Auto,5,*">
										<TextBlock Grid.Column="2" Text="{Binding FullName}"/>
										<TextBlock Grid.Row="1" Grid.Column="2" FontWeight="ExtraLight">
											<TextBlock Text="{Binding Post}"/>
											<TextBlock Text="{Binding Department}"/>
										</TextBlock>
										<Border Background="Transparent"
												Grid.RowSpan="2"
												ClipToBounds="True"
												CornerRadius="10"
												Width="40" Height="40">
											<Image Source="{Binding ImageUrl^}"/>
										</Border>
									</Grid>
								</DataTemplate>
							</AutoCompleteBox.ItemTemplate>
						</AutoCompleteBox>

						<ToggleButton Classes="split">
							<ToggleButton.IsChecked>
								<MultiBinding Converter="{x:Static BoolConverters.Or}">
									<MultiBinding.Bindings>
										<Binding Path="SelectedStartDate" Converter="{x:Static ObjectConverters.IsNotNull}"/>
										<Binding Path="SelectedEndDate" Converter="{x:Static ObjectConverters.IsNotNull}"/>
									</MultiBinding.Bindings>
								</MultiBinding>
							</ToggleButton.IsChecked>
							<StackPanel Orientation="Horizontal"
										Spacing="5" >
								<materialIcons:MaterialIcon VerticalAlignment="Bottom"
															Kind="CalendarArrowRight"/>
								<TextBlock>
									<Grid>
										<TextBlock>
											<TextBlock IsVisible="{Binding SelectedStartDate, 
													   Converter={x:Static ObjectConverters.IsNotNull}}">
												с <TextBlock Text="{Binding SelectedStartDate, StringFormat=dd.MM.yyyy}"/>
											</TextBlock>

											<TextBlock IsVisible="{Binding SelectedEndDate,
													   Converter={x:Static ObjectConverters.IsNotNull}}">
												по <TextBlock Text="{Binding SelectedEndDate, StringFormat=dd.MM.yyyy}"/>
											</TextBlock>
										</TextBlock>
										<TextBlock>
											<TextBlock.IsVisible>
												<MultiBinding Converter="{x:Static BoolConverters.And}">
													<MultiBinding.Bindings>
														<Binding Path="SelectedStartDate"
																 Converter="{x:Static ObjectConverters.IsNull}"/>
														<Binding Path="SelectedEndDate"
																 Converter="{x:Static ObjectConverters.IsNull}"/>
													</MultiBinding.Bindings>
												</MultiBinding>
											</TextBlock.IsVisible>
											Любая дата
										</TextBlock>
									</Grid>

								</TextBlock>
							</StackPanel>
							<Button.Flyout>
								<Flyout Placement="BottomEdgeAlignedLeft">
									<DockPanel LastChildFill="True">
										<Button DockPanel.Dock="Bottom"
												HorizontalAlignment="Stretch"
												Margin="0 5 0 0"
												Background="Transparent"
												Command="{Binding ClearDateFilterCommand}">Очистить</Button>
										<Grid RowDefinitions="Auto,Auto"
											  ColumnDefinitions="Auto,15,Auto">
											<!--ROW 0-->
											<TextBlock Grid.Column="0" FontWeight="SemiLight">С</TextBlock>
											<TextBlock Grid.Column="2" FontWeight="SemiLight">По</TextBlock>

											<!--ROW 1-->
											<CalendarDatePicker Grid.Row="1"
																Grid.Column="0"
																SelectedDateFormat="Custom"
																CustomDateFormatString="dd.MM.yyyy"
																SelectedDate="{Binding SelectedStartDate}"
																Watermark="дд.ММ.гггг"/>
											<Separator Grid.Row="1"
													   Grid.Column="1"
													   Height="2" Width="10"
												   />
											<CalendarDatePicker Grid.Row="1"
																Grid.Column="2"
																SelectedDateFormat="Custom"
																CustomDateFormatString="dd.MM.yyyy"
																SelectedDate="{Binding SelectedEndDate}"
																Watermark="дд.ММ.гггг"/>
										</Grid>
									</DockPanel>
								</Flyout>
							</Button.Flyout>
						</ToggleButton>

					</StackPanel>


					<Button Classes="accent" Grid.Column="4"
							Command="{Binding ((vm:MainMenuViewModel)DataContext).ShowCreateServiceRequestView,
												RelativeSource={RelativeSource AncestorType={x:Type views:MainMenuView}}}}">Создать заявку</Button>
				</Grid>

				<DataGrid Classes="selection" AutoGenerateColumns="False"
						  IsReadOnly="True"
						  CanUserResizeColumns="True"
						  CanUserReorderColumns="True"
						  GridLinesVisibility="Horizontal"
						  ItemsSource="{Binding Requests}"
						  BorderBrush="{DynamicResource DataGridGridLinesBrush}"
						  BorderThickness="0 1 0 0"
						  Name="SerivicesDataGrid"
						  HeadersVisibility="All"
						  RowHeaderWidth="30"
						  RowHeight="{Binding SelectedHeightDataGridRow.Height}">
					<i:Interaction.Behaviors>
						<beh:DataGridAddColumnCheckSelectionBehavior/>
					</i:Interaction.Behaviors>
					<DataGrid.Columns>
						<DataGridTemplateColumn Header="Заявитель" Width="*">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal"
												Spacing="5">
										<Border ClipToBounds="True"
												CornerRadius="10"
												Width="30" Height="30"
												Background="Transparent">
											<Image Source="{Binding Responsible.ImageUrl^}"/>
										</Border>
										<TextBlock VerticalAlignment="Center" Text="{Binding Responsible.FullName}"/>
									</StackPanel>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn Header="Исполнитель" Width="*">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Grid VerticalAlignment="Center" RowDefinitions="Auto" ColumnDefinitions="Auto,5,*">
										<Border ClipToBounds="True"
												CornerRadius="10"
												Background="Transparent"
												Width="30" Height="30"
												Grid.RowSpan="2">
											<Image Source="{Binding SystemAdministration.ImageUrl^}"/>
										</Border>
										<TextBlock VerticalAlignment="Center"
												   Grid.Column="2" Text="{Binding SystemAdministration.FullName}"/>
									</Grid>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTextColumn Header="Проблема" Width="Auto"
											Binding="{Binding ProblemType}"/>
						<DataGridTextColumn Header="Дата подачи" Width="Auto"
											Binding="{Binding CreationDate}"/>
						<DataGridTemplateColumn Width="90" CanUserResize="False"
												beh:DataGridColumnManipulatonBehavior.IsCanRemoveColumn="True">
							<DataGridTemplateColumn.Header>
								<Button HorizontalAlignment="Right"
										ToolTip.Tip="Настройка отображения столбцов">
									<materialIcons:MaterialIcon Kind="DatabaseEdit"/>
									<Button.Flyout>
										<Flyout Placement="BottomEdgeAlignedRight">
											<ContentPresenter Content="{Binding #SerivicesDataGrid.Columns}"
															  ContentTemplate="{StaticResource DataGridColumnsVisibilityDataTemplate}"/>
										</Flyout>
									</Button.Flyout>
								</Button>
							</DataGridTemplateColumn.Header>
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate DataType="model:EquipmentsServiceRequestVM">
									<StackPanel Orientation="Horizontal" Spacing="5" Margin="3">
										<Button Classes="action_row" Command="{Binding $parent[DataGrid].((vm:EquipmentsServiceRequestViewModel)DataContext).DeleteServiceRequestCommand}"
												CommandParameter="{Binding ID}"
												ToolTip.Tip="Удалить заявку">
											<PathIcon Data="{StaticResource delete_regular}"
													  Foreground="White"/>
										</Button>
										<Button Classes="action_row" Command="{Binding ((vm:MainMenuViewModel)DataContext).ShowCreateServiceRequestView,
												RelativeSource={RelativeSource AncestorType={x:Type views:MainMenuView}}}}"
												CommandParameter="{Binding ID}"
												ToolTip.Tip="Изменить заявку">
											<materialIcons:MaterialIcon Kind="Pencil"
																		Foreground="White"/>
										</Button>
									</StackPanel>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
			</DockPanel>

		</Border>

	</DockPanel>
</UserControl>
