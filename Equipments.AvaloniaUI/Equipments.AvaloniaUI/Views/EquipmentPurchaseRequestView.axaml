<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Equipments.AvaloniaUI.ViewModels"
			 xmlns:model="clr-namespace:Equipments.AvaloniaUI.Models"
			 mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
			 xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
			 xmlns:sg="clr-namespace:SpacedGridControl.Avalonia;assembly=SpacedGridControl.Avalonia"
             x:DataType="vm:EquipmentPurchaseRequestViewModel"
			 x:Class="Equipments.AvaloniaUI.Views.EquipmentPurchaseRequestView">
	<UserControl.Styles>
		<StyleInclude Source="/Styles/SpecialViewStyles/EquipmentPurchaseRequestStyles.axaml"/>
	</UserControl.Styles>

	<DockPanel Classes="main">

		<!--HEADER-->
		<Grid Classes="header"
			  DockPanel.Dock="Top"
			  ColumnDefinitions="Auto,*,Auto">
			<StackPanel Orientation="Horizontal"
						Spacing="10">
				<TextBlock Classes="h3"
						   FontWeight="Black">Закупка оборудования</TextBlock>
				<SplitButton ToolTip.Tip="Экспорт в Excel">
					<materialIcons:MaterialIcon Kind="MicrosoftExcel"/>
					<SplitButton.Flyout>
						<MenuFlyout Placement="BottomEdgeAlignedRight">
							<MenuItem Icon="{materialIcons:MaterialIconExt Kind=FilePdfBox}"
									  Header="Экспорт в PDF"/>
							<MenuItem Icon="{materialIcons:MaterialIconExt Kind=LanguageHtml5}"
									  Header="Экспорт в Html"/>
							<MenuItem Icon="{materialIcons:MaterialIconExt Kind=FileDocument}"
									  Header="Экспорт в CSV"/>
						</MenuFlyout>
					</SplitButton.Flyout>
				</SplitButton>
			</StackPanel>

			<StackPanel Grid.Column="2">

			</StackPanel>
		</Grid>
		<!--HEADER-->

		<!--FILTER-->
		<sg:SpacedGrid Classes="tools" ColumnDefinitions="Auto,Auto,*,Auto"
					   ColumnSpacing="10" DockPanel.Dock="Top">
			<ComboBox ItemsSource="{Binding EmployeesFilterList}"
					  SelectedItem="{Binding SelectedEmploye}">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding FullName}"/>
					</DataTemplate>
				</ComboBox.ItemTemplate>
			</ComboBox>
			<CalendarDatePicker Watermark="Выберите дату создания"
								SelectedDate="{Binding SelectedDateFilter}"
								Grid.Column="1"/>
			<Button Classes="accent" Grid.Column="3"
					Command="{Binding ShowEditRequestCommand}">Создать заявку</Button>
		</sg:SpacedGrid>

		<!--FILTER-->

		<!--TABLE-->


		<DataGrid ItemsSource="{Binding Purchases}"
				  AutoGenerateColumns="False"
				  IsReadOnly="True"
				  CanUserResizeColumns="True"
				  CanUserReorderColumns="False"
				  GridLinesVisibility="Horizontal"
				  >
			<DataGrid.Columns>
				<DataGridTextColumn Header="Системный администратор"
									Width="*"
									Binding="{Binding SystemAdministration.FullName}"/>
				<DataGridTextColumn Header="Дата создания"
									Width="Auto"
									Binding="{Binding CreationDate}"/>
				<DataGridTextColumn Header="Срок приобритения"
									Width="Auto"
									Binding="{Binding PurchaseDeadline}"/>
				<DataGridTemplateColumn Header="Действие"
										Width="Auto">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate DataType="model:PurchaseRequestModel">
							<StackPanel Orientation="Horizontal" Spacing="5" Margin="3">
								<Button>У</Button>
								<Button
									Command="{Binding $parent[DataGrid].((vm:EquipmentPurchaseRequestViewModel)DataContext).ShowEditRequestCommand}"
									CommandParameter="{Binding ID}">Р</Button>
							</StackPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>

				</DataGridTemplateColumn>
			</DataGrid.Columns>

			<!--Таблица: 
			Можно сделать Expander для отображения 
			закупочного оборудования и
			коммерческих предложений-->

		</DataGrid>
		<!--TABLE-->
	</DockPanel>
</UserControl>
